library IEEE;
use IEEE.std_logic_1164.all;

use work.my_components.all;


entity MDR is
   PORT
   (
      r0, r1, r2, r3, r4, r5, r6, r7, r8, r9,
		r10, r11, r12, r13, r14, r15, hi, lo, zhi, zlo,
		pc, mdr: in std_logic_vector(31 downto 0);
		
		r0out,r1out,r2out,r3out,r4out,
		r5out,r6out,r7out,r8out,r9out,
		r10out,r11out,r12out,r13out,r14out,
		r15out,HIout,LOout,Zhighout,Zlowout,
		PCout, MDRout, InPortout, Cout: in std_logic;
		
		muxout: out std_logic_vector(31 downto 0);
   );
END entity;

-----------------------------------------------------

architecture mem_reg of MDR is

signal encoder_to_mux : std_logic_vector(4 downto 0);

begin

the_mux : mux32
	port map (
	--change port names to rN to rNx
		r0_busin 	=> r0_busin,
		r1_busin		=> r1_busin,
		r2_busin		=> r2_busin,
		r3_busin		=> r3_busin,
		r4_busin		=> r4_busin,
		r5_busin		=> r5_busin,
		r6_busin 	=> r6_busin,
		r7_busin		=> r7_busin,
		r8_busin		=> r8_busin,
		r9_busin		=> r9_busin,
		r10_busin	=>	r10_busin,
		r11_busin	=>	r11_busin,
		r12_busin	=>	r12_busin,
		r13_busin	=>	r13_busin,
		r14_busin	=>	r14_busin,
		r15_busin	=>	r15_busin,
		hi_busin		=>	hi_busin,
		lo_busin		=> lo_busin,
		zhi_busin	=> zhi_busin,
		zlo_busin	=> zlo_busin,
		pc_busin		=> pc_busin,
		mdr_busin	=> mdr_busin
		
		encoder_to_mux => sel,
		
		muxout		=> muxout
	);

reg32 : reg32
	port map (
		--encoder_in => x_in,
		r0out		=>	r0out,
		r1out		=>	r1out		,
		r2out		=>	r2out		,
		r3out		=>	r3out		,
		r4out		=>	r4out		,
		r5out		=>	r5out		,
		r6out		=>	r6out		,
		r7out		=>	r7out		,
		r8out		=>	r8out		,
		r9out		=>	r9out		,
		r10out	=>	r10out	,
		r11out	=>	r11out	,
		r12out	=>	r12out	,
		r13out	=>	r13out	,
		r14out	=>	r14out	,
		r15out	=>	r15out	,
		HIout		=>	HIout		,
		LOout		=>	LOout		,
		Zhighout	=>	Zhighout	,
		Zlowout	=>	Zlowout	,
		PCout		=>	PCout		,
		MDRout	=>	MDRout	,
		InPortout	=>	InPortout,
		Cout		=>	Cout		,
		y_out 	=> encoder_to_mux
	)



end architecture;
